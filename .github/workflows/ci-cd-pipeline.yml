name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

  deploy:
    runs-on: ubuntu-latest
    needs: build # Only runs after the 'build' job has completed

    steps:
      # Checkout the code again (if not cached)
      - name: Checkout code
        uses: actions/checkout@v3

      # Install Ansible and sshpass
      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible sshpass

      # Deploy the html and css files using Ansible
      - name: Deploy with Ansible
        run: |
          chmod 400 networkingEC2InstanceKeyPair.pem
          ansible-playbook -i inventory.ini ansible-playbook.yml

      # Stop and remove any existing Docker container running on port 8080
      - name: Stop and remove existing Docker container
        run: |
          # Get container id running on port 8080
          CONTAINER_ID=$(docker ps -q -f "publish=8080")
          if [ -n "$CONTAINER_ID" ]; then
            echo "Stopping and removing existing container with ID: $CONTAINER_ID"
            docker stop $CONTAINER_ID
            docker rm $CONTAINER_ID
          else
            echo "No container found running on port 8080"
          fi

      # Run the new Docker container on port 8080
      - name: Run Docker container
        run: |
          docker run -d -p 8080:80 basicapp:latest
